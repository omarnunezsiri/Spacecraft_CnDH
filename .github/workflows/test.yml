name: Dotnet Build and Test Project

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['6.0.x', '7.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Test with the dotnet CLI
        run: |
          # Runs bash script on Linux/MacOS, PowerShell otherwise
          if [ "$RUNNER_OS" = "Linux" ] || [ "$RUNNER_OS" = "Darwin" ]; then
            for csproj in $(find . -name '*.csproj'); do
              echo "Running tests in project: $csproj"
              dotnet test "$csproj"
              rc=$?
              if [[ $rc != 0 ]]; then
                echo "Tests in project $csproj failed! Exiting..."
                exit $rc
              fi
            done
          else
            Get-ChildItem -Recurse -Filter '*.csproj' | ForEach-Object {
              $csproj = $_.FullName
              Write-Host "Running tests in project: $csproj"
              dotnet test "$csproj"
              if ($LASTEXITCODE -ne 0) {
                Write-Host "Tests in project $csproj failed! Exiting..."
                exit $LASTEXITCODE
              }
            }
          fi
